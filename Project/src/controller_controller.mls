node controller_controller_controller_cntrl_turn_r(controller_v_22 : bool;
                                                    controller_v_23 : bool;
                                                    controller_v_24 : bool;
                                                    controller_v_26 : bool;
                                                    controller_v_29 : bool;
                                                    controller_v_30 : bool;
                                                    controller_v_31 : bool;
                                                    controller_v_33 : bool;
                                                    controller_ck_1 : bool;
                                                    controller_pnr_3 : bool;
                                                    controller_ck_4_1 : bool;
                                                    controller_pnr_2 : bool;
                                                    controller_ck_6_1 : bool;
                                                    controller_pnr_1 : bool;
                                                    controller_ck_8_1 : bool;
                                                    controller_pnr : bool;
                                                    p_controller_cntrl_turn_r : bool;
                                                    p_controller_cntrl_turn_l : bool;
                                                    controller_cntrl_turn_l : bool)
returns (controller_cntrl_turn_r : bool)
var v_9 : bool; v_8 : bool; v_7 : bool; v_6 : bool; v_5 : bool; v_4 : bool;
    v_3 : bool; v_2 : bool; v_1 : bool; v : bool; sub_0 : bool; sub_1 : bool;
    sub_2 : bool; sub_3 : bool; sub_4 : bool; sub_5 : bool; sub_6 : bool;
    sub_7 : bool; sub_8 : bool; sub_9 : bool; sub_10 : bool; sub_11 : bool;
    sub_12 : bool; sub_13 : bool; sub_14 : bool; sub_15 : bool;
    sub_16 : bool; sub_17 : bool; sub_18 : bool; sub_19 : bool;
    sub_20 : bool; sub_21 : bool; sub_22 : bool; sub_23 : bool;
    sub_24 : bool; sub_25 : bool; sub_26 : bool; sub_27 : bool;
    sub_28 : bool; sub_29 : bool; sub_30 : bool; sub_31 : bool;
    sub_32 : bool; sub_33 : bool; sub_34 : bool; sub_35 : bool;
    sub_36 : bool; sub_37 : bool; sub_38 : bool; sub_39 : bool;
    sub_40 : bool; sub_41 : bool;
let
  controller_cntrl_turn_r = sub_0;
  sub_41 = if controller_v_29 then sub_15 else sub_36;
  sub_40 = if controller_v_30 then sub_35 else sub_14;
  sub_39 = if controller_ck_6_1 then sub_41 else sub_40;
  sub_38 = (controller_v_33 or false);
  sub_37 = if controller_cntrl_turn_l then sub_38 else sub_26;
  v = if controller_v_31 then false else sub_27;
  v_1 = if controller_cntrl_turn_l then v else sub_26;
  sub_36 = if controller_ck_8_1 then v_1 else sub_37;
  sub_35 = sub_36;
  sub_34 = sub_35;
  sub_33 = if controller_v_26 then sub_34 else sub_39;
  sub_32 = sub_33;
  v_2 = if controller_v_24 then sub_39 else sub_34;
  sub_31 = if controller_ck_4_1 then v_2 else sub_32;
  sub_30 = if controller_v_29 then sub_8 else sub_25;
  sub_29 = if controller_v_30 then sub_24 else sub_7;
  sub_28 = if controller_ck_6_1 then sub_30 else sub_29;
  sub_27 = true;
  sub_26 = sub_27;
  sub_25 = sub_26;
  sub_24 = sub_25;
  sub_23 = sub_24;
  sub_22 = if controller_v_26 then sub_23 else sub_28;
  sub_21 = sub_22;
  v_3 = if controller_v_24 then sub_28 else sub_23;
  sub_20 = if controller_ck_4_1 then v_3 else sub_21;
  sub_19 = if controller_v_23 then sub_20 else sub_31;
  sub_18 = sub_19;
  v_4 = not(controller_v_33);
  sub_17 = (v_4 & false);
  sub_16 = if controller_cntrl_turn_l then sub_17 else sub_9;
  v_5 = if controller_v_31 then false else sub_10;
  v_6 = if controller_cntrl_turn_l then v_5 else sub_9;
  sub_15 = if controller_ck_8_1 then v_6 else sub_16;
  sub_14 = sub_15;
  sub_13 = sub_14;
  sub_12 = sub_13;
  sub_11 = sub_12;
  sub_10 = false;
  sub_9 = sub_10;
  sub_8 = sub_9;
  sub_7 = sub_8;
  sub_6 = sub_7;
  sub_5 = sub_6;
  sub_4 = sub_5;
  sub_3 = if controller_v_23 then sub_4 else sub_11;
  sub_2 = sub_3;
  v_7 = if controller_v_22 then sub_11 else sub_4;
  sub_1 = if controller_ck_1 then v_7 else sub_2;
  v_8 = if controller_v_22 then sub_31 else sub_20;
  v_9 = if controller_ck_1 then v_8 else sub_18;
  sub_0 = if p_controller_cntrl_turn_r then v_9 else sub_1
tel

node controller_controller_controller_cntrl_turn_l(controller_v_22 : bool;
                                                    controller_v_23 : bool;
                                                    controller_v_24 : bool;
                                                    controller_v_26 : bool;
                                                    controller_v_29 : bool;
                                                    controller_v_30 : bool;
                                                    controller_v_31 : bool;
                                                    controller_v_33 : bool;
                                                    controller_ck_1 : bool;
                                                    controller_pnr_3 : bool;
                                                    controller_ck_4_1 : bool;
                                                    controller_pnr_2 : bool;
                                                    controller_ck_6_1 : bool;
                                                    controller_pnr_1 : bool;
                                                    controller_ck_8_1 : bool;
                                                    controller_pnr : bool;
                                                    p_controller_cntrl_turn_r : bool;
                                                    p_controller_cntrl_turn_l : bool)
returns (controller_cntrl_turn_l : bool)
var v_10 : bool; v : bool; sub_0 : bool; sub_1 : bool; sub_2 : bool;
    sub_3 : bool; sub_4 : bool; sub_5 : bool; sub_6 : bool; sub_7 : bool;
    sub_8 : bool; sub_9 : bool; sub_10 : bool; sub_11 : bool; sub_12 : bool;
    sub_13 : bool; sub_14 : bool; sub_15 : bool; sub_16 : bool;
let
  controller_cntrl_turn_l = sub_0;
  sub_16 = (controller_v_33 & sub_9);
  sub_15 = sub_16;
  v = if controller_v_31 then false else sub_8;
  sub_14 = if controller_ck_8_1 then v else sub_15;
  sub_13 = sub_14;
  sub_12 = sub_13;
  sub_11 = sub_12;
  sub_10 = sub_11;
  sub_9 = p_controller_cntrl_turn_l;
  sub_8 = sub_9;
  sub_7 = sub_8;
  sub_6 = sub_7;
  sub_5 = sub_6;
  sub_4 = sub_5;
  sub_3 = sub_4;
  sub_2 = if controller_v_23 then sub_3 else sub_10;
  sub_1 = sub_2;
  v_10 = if controller_v_22 then sub_10 else sub_3;
  sub_0 = if controller_ck_1 then v_10 else sub_1
tel

node controller_controller(controller_v_22 : bool; controller_v_23 : bool;
                            controller_v_24 : bool; controller_v_26 : bool;
                            controller_v_29 : bool; controller_v_30 : bool;
                            controller_v_31 : bool; controller_v_33 : bool;
                            controller_ck_1 : bool; controller_pnr_3 : bool;
                            controller_ck_4_1 : bool;
                            controller_pnr_2 : bool;
                            controller_ck_6_1 : bool;
                            controller_pnr_1 : bool;
                            controller_ck_8_1 : bool; controller_pnr : bool;
                            p_controller_cntrl_turn_r : bool;
                            p_controller_cntrl_turn_l : bool)
returns (controller_cntrl_turn_r : bool; controller_cntrl_turn_l : bool)
let
  controller_cntrl_turn_l =
    controller_controller_controller_cntrl_turn_l
    (controller_v_22, controller_v_23, controller_v_24, controller_v_26,
      controller_v_29, controller_v_30, controller_v_31, controller_v_33,
      controller_ck_1, controller_pnr_3, controller_ck_4_1, controller_pnr_2,
      controller_ck_6_1, controller_pnr_1, controller_ck_8_1, controller_pnr,
      p_controller_cntrl_turn_r, p_controller_cntrl_turn_l);
  controller_cntrl_turn_r =
    controller_controller_controller_cntrl_turn_r
    (controller_v_22, controller_v_23, controller_v_24, controller_v_26,
      controller_v_29, controller_v_30, controller_v_31, controller_v_33,
      controller_ck_1, controller_pnr_3, controller_ck_4_1, controller_pnr_2,
      controller_ck_6_1, controller_pnr_1, controller_ck_8_1, controller_pnr,
      p_controller_cntrl_turn_r, p_controller_cntrl_turn_l,
      controller_cntrl_turn_l)
tel

